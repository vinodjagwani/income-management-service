plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '3.2.1'
    id 'org.sonarqube' version '3.3'
}

group = 'income-management-service'
version = '1.0'

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework:spring-jdbc'
    implementation 'org.projectlombok:lombok:1.18.20'
    runtimeOnly 'io.r2dbc:r2dbc-pool'
    runtimeOnly 'io.r2dbc:r2dbc-postgresql'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.auth0:java-jwt:3.10.3'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-spring-webflux:3.0.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'io.vavr:vavr:0.10.3'
    implementation 'org.eclipse.collections:eclipse-collections-api:10.4.0'
    implementation 'org.eclipse.collections:eclipse-collections:10.4.0'
    implementation 'org.modelmapper:modelmapper:2.4.4'
    implementation 'org.zalando:logbook-spring-boot-starter:2.11.0'
    implementation('org.zalando:logbook-spring-boot-autoconfigure:2.11.0') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    implementation 'org.zalando:logbook-netty:2.11.0'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'javax.servlet', module: 'javax.servlet-api'
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jib {
    from {
        image = 'mcr.microsoft.com/openjdk/jdk:17-ubuntu'
    }
    to {
        image = 'jagwaniazuredockerregistry.azurecr.io/income-management-service'
        tags = ['latest', project.version] as List<String>
    }
    container {
        appRoot = '/income-management-service'
        jvmFlags = ['-Xms360m', '-Xmx1024m', '-Dspring.profiles.active=docker']
        ports = ['8099', '9099']
        workingDirectory = '/income-management-service'
    }
    allowInsecureRegistries = false
}

apply plugin: 'java'
apply plugin: "jacoco"
apply plugin: 'org.sonarqube'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = file("$buildDir/jacoco")

}

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

springBoot {
    buildInfo()
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1
            }
        }
    }
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://localhost:9000/'
        property "sonar.login", "admin"
        property "sonar.password", "Admin"
        property "sonar.projectKey", "payment-service"
        property 'sonar.projectName', 'payment-service'
        property 'sonar.java.source', 17
        property 'sonar.junit.reportPaths', 'build/results'
        property 'encoding', 'UTF-8'
        property 'charSet', 'UTF-8'
        property "sonar.coverage.jacoco.xmlReportPaths", "path.xml"
    }
}

test.finalizedBy jacocoTestReport
project.tasks["sonarqube"].dependsOn jacocoTestReport